#include <iostream>
using namespace std;

class Stack {
    int top;
    int capacity;
    int* stack;

public:
    Stack(int size) {
        capacity = size;
        stack = new int[capacity];
        top = -1;
    }

    void push(int value) {
        if (top == capacity - 1) {
            cout << "Stack overflow\n";
            return;
        }
        stack[++top] = value;
    }

    int pop() {
        if (top == -1) {
            cout << "Stack underflow\n";
            return -1;
        }
        return stack[top--];
    }

    int peek() {
        if (top == -1) {
            cout << "Stack is empty\n";
            return -1;
        }
        return stack[top];
    }

    bool isEmpty() {
        return top == -1;
    }

    ~Stack() {
        delete[] stack;
    }
};

int main() {
    Stack s(5);

    s.push(10);
    s.push(20);
    s.push(30);

    cout << "Top element: " << s.peek() << endl;

    cout << "Popped element: " << s.pop() << endl;
    cout << "Popped element: " << s.pop() << endl;

    cout << "Is stack empty? " << (s.isEmpty() ? "Yes" : "No") << endl;

    s.push(40);
    cout << "Top element: " << s.peek() << endl;

    return 0;
}
